Page 90.

QUESTION 19.
OUTPUT-

how do you doSeven of nine.

Note- There is no space between doSeven because no space added when we concatenate two strings.

QUESTION 20.
OUTPUT-

7
b

Note-  .length() returns to the integer 7 and charAt(1) returns the character “b” at index “1” in the string.

QUESTION 21.
OUTPUT-

defg

Note- substring method of String class takes the start index for new substring to be formed from the original string, here “d” was at index 3 so the substring was selected from index 3 till end of the original string.

QUESTION 22.
OUTPUT-

abc
def

Note- The escape sequence \n indicates that the string starts a new line at the \n.

QUESTION 23.
OUTPUT-

abc\ndef

Note-  The character “\” is used before escape sequences when the escape sequences are supposed to be printed as is and they have real meaning in plain text.
QUESTION 24.
OUTPUT-

HELLO JOHN

Note: toUpperCase is a method in String class which when invoked on a String converts the characters in that string to upper case.

QUESTION 25.
OUTPUT- 
false

Note: The equals method in String class compares the values of the two strings and as the case of the letters is different, it says they are not equal.
If equalsIgnoreCase method was used instead, it would ignore cases in the two strings and would had compared text in which case it would have resulted in true.


QUESTION 26.
OUTPUT-

true

Note: Here the two strings are converted to upper case before being compared, so equals find them same and returns true.


Page103
Question 30.

package exercise;
import java.util.Scanner;
public class Question30 {
public static void main(String[] args)
	{
		Scanner keyboard = new Scanner(System.in);
		String 	word1,word2,word3;
		System.out.println("Type three words on one line");
		word1 = keyboard.next();
		word2 = keyboard.next();
		word3 = keyboard.next();
		System.out.println(word1 + "  " + word2 + "  " + word3);
	}
}

Output: 
Type three words on one line
how        are                you
how  are  you

Type three words on one line
always be happy
always  be  happy

Type three words on one line
eclipse      is   fun
eclipse  is  fun


Question31.
Output - helloJoe

Note- The ‘+’ operator concatenates two string without giving any additional spaces. So, here it concatenated hello with Joe without space.

Page 154.

Question#1

package exercise;
import java.util.Scanner;
public class Question1 {

	public static void main(String[] args) 
	{
		Scanner keyboard = new Scanner (System.in);
		int goals;
		System.out.println("Enter goals");
		goals = keyboard.nextInt();
		
		if (goals>10)
			System.out.println("Wow");
			
		else 
			System.out.println("Oh Well");
		}
}
output-

Enter goals
13
Wow

Enter goals
5
Oh Well

Enter goals
10
Oh Well

Question#2


package exercise;
import java.util.Scanner;
public class Question2 {
	public static void main(String[] args) 
	{
		Scanner keyboard = new Scanner (System.in);
		int goals,errors;
		System.out.println("Enter goals and errors");
		goals = keyboard.nextInt();
		errors = keyboard.nextInt();
		
		if ((goals > 10) && (errors == 0))
			System.out.println("Wow");
			
		else 
			System.out.println("Oh Well");
		
	}

}


output-
Enter goals and errors
12 5
Oh Well

Enter goals and errors
15 0
Wow

Enter goals and errors
10 0
Oh Well

Question#3

package exercise;
import java.util.Scanner;
public class Question1 {

	public static void main(String[] args) 
	{
		
		Scanner keyboard = new Scanner (System.in);
		double salary,deduction,net;
		System.out.println("Enter salary and deduction");
		salary = keyboard.nextInt();
		deduction = keyboard.nextInt();		
	
		if (salary >= deduction)
		{
			System.out.println("ok") ;
		    net = salary - deduction; }
			
		else 
			System.out.println("No way");
		
	
		
	}

}

output-

Enter salary and deduction
90000 200
ok

Enter salary and deduction
5000 10000
No way

Enter salary and deduction
7000 7000
ok
